// Code generated by mockery v2.20.0. DO NOT EDIT.

package repository_mock

import mock "github.com/stretchr/testify/mock"

// ProductFlatRepository is an autogenerated mock type for the ProductFlatRepository type
type ProductFlatRepository struct {
	mock.Mock
}

// GetQueryRawAllProduct provides a mock function with given fields: productIDs, storeID, typeProduct, isCount, merchantID
func (_m *ProductFlatRepository) GetQueryRawAllProduct(productIDs string, storeID int, typeProduct string, isCount bool, merchantID int) string {
	ret := _m.Called(productIDs, storeID, typeProduct, isCount, merchantID)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, int, string, bool, int) string); ok {
		r0 = rf(productIDs, storeID, typeProduct, isCount, merchantID)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewProductFlatRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductFlatRepository creates a new instance of ProductFlatRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductFlatRepository(t mockConstructorTestingTNewProductFlatRepository) *ProductFlatRepository {
	mock := &ProductFlatRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
